LIBRARY ieee;
  USE ieee.std_logic_1164.all;
  USE ieee.numeric_std.all;

ENTITY nanoBlaze_tb_reg IS
END nanoBlaze_tb_reg ;

--==============================================================================

ARCHITECTURE struct OF nanoBlaze_tb_reg IS

  -- Values for the generic parameters
  constant addressBitNb: positive := 8;
  constant dataBitNb: positive := 8;
  constant programCounterBitNb: positive := 10;
  constant stackPointerBitNb: positive := 5;
  constant registerAddressBitNb: positive := 4;
  constant portAddressBitNb: positive := 8;
  constant scratchpadAddressBitNb: positive := 4;

  SIGNAL reset       : std_ulogic;
  SIGNAL clock       : std_ulogic;
  SIGNAL en          : std_ulogic;
  SIGNAL dataAddress : unsigned( addressBitNb-1 DOWNTO 0 );
  SIGNAL dataOut     : std_ulogic_vector(dataBitNb-1 DOWNTO 0);
  SIGNAL dataIn      : std_ulogic_vector(dataBitNb-1 DOWNTO 0);
  SIGNAL readStrobe  : std_uLogic;
  SIGNAL writeStrobe : std_uLogic;
  SIGNAL int         : std_uLogic;
  SIGNAL intAck      : std_ulogic;

  COMPONENT out_regs
	GENERIC( 
		 addressBitNb           : positive := 8;
		 registerBitNb          : positive := 8;
		 programCounterBitNb    : positive := 10;
		 stackPointerBitNb      : positive := 5;
		 registerAddressBitNb   : positive := 4;
		 scratchpadAddressBitNb : natural  := 6
	  );
	port(
		clk, reset: in std_logic;
		sw: in std_ulogic_vector (7 downto 0) ;
		led: out std_ulogic_vector (7 downto 0)
	);
  END COMPONENT;

  COMPONENT nanoBlaze_tb_reg
    GENERIC (
      addressBitNb : positive := 8;
      dataBitNb    : positive := 8
    );
    PORT (
      reset       : OUT std_ulogic;
      clock       : OUT std_uLogic;
      en          : OUT std_uLogic;
      dataAddress : IN  unsigned(addressBitNb-1 DOWNTO 0);
      dataOut     : IN  std_ulogic_vector(dataBitNb-1 DOWNTO 0);
      dataIn      : OUT std_ulogic_vector(dataBitNb-1 DOWNTO 0);
      readStrobe  : IN  std_uLogic;
      writeStrobe : IN  std_uLogic;
      int         : OUT std_uLogic;
      intAck      : IN  std_uLogic
    );
  END COMPONENT;

BEGIN

  I_DUT : out_regs
    GENERIC MAP (
		 addressBitNb           => addressBitNb,
		 registerBitNb          => registerBitNb, 
		 programCounterBitNb    => programCounterBitNb, 
		 stackPointerBitNb      => stackPointerBitNb, 
		 registerAddressBitNb   => registerAddressBitNb, 
		 scratchpadAddressBitNb => scratchpadAddressBitNb
    )
    PORT MAP (
      clk       => clock,
      sw      => dataIn,
      reset       => reset,
      led    => dataOut
    );

  I_tb : nanoBlaze_tb_reg
    GENERIC MAP (
      addressBitNb => addressBitNb,
      dataBitNb    => dataBitNb
    )
    PORT MAP (
      dataAddress => dataAddress,
      dataOut     => dataOut,
      intAck      => intAck,
      readStrobe  => readStrobe,
      writeStrobe => writeStrobe,
      clock       => clock,
      dataIn      => dataIn,
      en          => en,
      int         => int,
      reset       => reset
    );

END ARCHITECTURE struct;